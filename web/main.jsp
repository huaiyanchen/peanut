<%--
  Created by IntelliJ IDEA.
  User: Administrator
  Date: 2021/5/25
  Time: 16:15
  To change this template use File | Settings | File Templates.
--%>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>

<html>
<head>
    <title>ü•úüöá</title>
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/element-ui/2.15.1/index.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/layer/3.4.0/layer.js"></script>
    <link rel="stylesheet" href="static/css/main.css"/>
</head>
<body>
<div id="app" style="display: none;">
    <!-- Â∑¶Ëæπ ÂØºËà™Ê†è -->
    <div class="left-side" style="background-color:#545c64">
        <!-- È°∂ÈÉ®ÁõíÂ≠ê ÊòæÁ§∫Á≥ªÁªüÂêçÁß∞ Â§¥ÂÉè Ê¨¢Ëøé -->
        <div class="left-top-box">
            <div class="left-top-title" :style="{color:webInfo.textColorActive}">{{adminName}}</div>
            <div class="left-top-avatar">
                <img :src="headpic"/>
            </div>
            <div class="left-top-welcome" :style="{color:webInfo.textColorActive}">{{adminName}}Ê¨¢Ëøé‰Ω†ÔºÅ</div>
        </div>
        <!-- ÂØºËà™Ê†èÁõíÂ≠ê-->
        <div class="left-navs-box">
            <div class="navs-inner-box">
                <el-menu :default-active="id" class="navs-item-box" :background-color="webInfo.bg"
                         :text-color="webInfo.textColor"
                         :active-text-color="webInfo.textColorActive">
                    <el-menu-item @click="welTab" index="0">
                        <i class="el-icon-s-platform"></i>
                        <span slot="title">Ê¨¢ËøéÈ°µ</span>
                    </el-menu-item>
                    <div v-for="(item,index) in navs" :key="item.id">
                        <!-- Ê≤°ÊúâÂ≠êÈÄâÈ°π -->
                        <el-menu-item @click="openTabs(item)" v-if="item.href!='#'" :index="item.id">
                            <i :class="item.icon"></i>
                            <span slot="title">{{item.title}}</span>
                        </el-menu-item>
                        <!-- ÊúâÂ≠êÈÄâÈ°π -->
                        <el-submenu v-if="item.href=='#'" :index="item.id">
                            <template slot="title"><i :class="item.icon"></i>{{item.title}}</template>
                            <el-menu-item v-for="(item,index) in item.children" @click="openTabs(item)" :key="item.id"
                                          :index="item.id">
                                <i :class="item.icon"></i>
                                {{item.title}}
                            </el-menu-item>
                        </el-submenu>
                    </div>
                </el-menu>
            </div>
        </div>
    </div>
    <!-- /Â∑¶Ëæπ ÂØºËà™Ê†è -->
    <!-- Âè≥ËæπÂå∫Âüü -->
    <div class="right-box">
        <!-- È°∂ÈÉ®Ê†è -->
        <div class="right-header">
            <i @click="isShowNav" :class="showNav?'el-icon-s-fold':'el-icon-s-unfold'"></i>
            <div class="header-right">
                <el-tooltip content="Á≥ªÁªüÂÖ¨Âëä" placement="bottom" effect="light">
                    <el-badge is-dot class="item"><i @click="notice" class="el-icon-bell"></i></el-badge>
                </el-tooltip>
                <el-avatar size="small" :src="headpic"></el-avatar>
                <!--‰∏™‰∫∫‰ø°ÊÅØÊìç‰Ωú -->
                <el-dropdown :show-timeout=100 @command="personCommand">
							<span class="el-dropdown-link">
								{{adminName}}<i class="el-icon-arrow-down el-icon--right"></i>
							</span>
                    <el-dropdown-menu slot="dropdown">
                        <el-dropdown-item command="center">‰∏™‰∫∫‰∏≠ÂøÉ</el-dropdown-item>
                        <el-dropdown-item command="base">‰øÆÊîπÂØÜÁ†Å</el-dropdown-item>
                        <el-dropdown-item command="logout">ÈÄÄÂá∫ÁôªÂΩï</el-dropdown-item>
                    </el-dropdown-menu>
                </el-dropdown>
            </div>

        </div>
        <!-- tab Ê†áÁ≠æÊ†è -->
        <div class="right-tab-box">
            <div class="tab-left" @click="tabsLeft"><a href="#"><i class="el-icon-arrow-left"></i></a></div>
            <div class="tab-item-box">
                <div class="tab-item-ul">
                    <div class="tab-item" @click="welTab" :class="welcome?'tab-item-active':'1'">
                        <i class="el-icon-s-platform  tab-item-icon"></i>
                        <div class="tab-item-text">Ê¨¢ËøéÈ°µ</div>
                    </div>
                    <div class="tab-item" @click="tabActive(item)" :id="item.id"
                         :class="id==item.id?'tab-item-active':'1'" v-for="(item,index) in tabs">
                        <i class="tab-item-icon" :class="item.data.icon"></i>
                        <div class="tab-item-text">{{item.data.title}}</div>
                        <i @click.stop="tabClose(item)" class="el-icon-close tab-item-close"></i>
                    </div>
                </div>
            </div>
            <div class="tab-right" @click="tabsRight"><a href="#"><i class="el-icon-arrow-right"></i></a></div>
            <div class="tabs-close-box">
                <el-dropdown @command="tabsCloseItem" :show-timeout=100>
                    <i class="el-icon-arrow-down"></i>
                    <el-dropdown-menu slot="dropdown">
                        <el-dropdown-item command="a">ÂÖ≥Èó≠ÂΩìÂâçÊ†áÁ≠æÈ°µ</el-dropdown-item>
                        <el-dropdown-item command="b">ÂÖ≥Èó≠ÂÖ∂‰ªñÊ†áÁ≠æÈ°µ</el-dropdown-item>
                        <el-dropdown-item command="c">ÂÖ≥Èó≠ÊâÄÊúâÊ†áÁ≠æÈ°µ</el-dropdown-item>
                    </el-dropdown-menu>
                </el-dropdown>
            </div>
        </div>
        <!-- ÂÜÖÂÆπÂå∫Âüü iframe -->
        <el-main style="padding: 0px">
            <div class="right-contain">
                <iframe src="welcome.html" frameborder="0" scrolling="yes" width="100%" height="100%" v-show="welcome">
                </iframe>
                <template v-for="(item,index) in tabs">
                    <iframe :src="item.data.href" frameborder="0" scrolling="yes" width="100%" height="100%"
                            v-show="id==item.id">
                    </iframe>
                </template>
            </div>
        </el-main>
        <!-- Â∫ïÈÉ®Ê†è -->
        <!-- <div class="right-footer" :style="{backgroundColor:webInfo.bg}"><span>¬Æ{{footerText}}</span></div> -->
    </div>
    <!-- Ê®°ÊÄÅÊ°Ü -->
    <el-dialog title="‰øÆÊîπÂØÜÁ†Å" :visible.sync="updateDialog" width="40%">
        <el-form label-width="90px" :model="updatePwd" ref="updatePwd" :rules="rules">
            <el-row>
                <el-form-item label="ÂéüÂØÜÁ†Å">
                    <el-input v-model="updatePwd.pwd" auto-complete="off" show-password
                              placeholder="ËØ∑ËæìÂÖ•ÂêçÁß∞"></el-input>
                </el-form-item>

                <el-form-item label="Êñ∞ÂØÜÁ†Å" prop="newPwd">
                    <el-input v-model="updatePwd.newPwd" auto-complete="off" show-password
                              placeholder="ËØ∑ËæìÂÖ•ÂêçÁß∞"></el-input>
                </el-form-item>

                <el-form-item label="Á°ÆËÆ§ÂØÜÁ†Å" prop="confirmPwd">
                    <el-input v-model="updatePwd.confirmPwd" auto-complete="off" show-password
                              placeholder="ËØ∑ËæìÂÖ•‰ΩúËÄÖ"></el-input>
                </el-form-item>
            </el-row>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button @click="updateDialog = false">Âèñ Ê∂à</el-button>
            <el-button type="primary" @click="modifyPwd">Á°Æ ÂÆö</el-button>
        </div>
    </el-dialog>


    <el-dialog title="‰∏™‰∫∫‰∏≠ÂøÉ" :visible.sync="showDataDialog" width="40%">
        <el-form ref="personData" :model="personData" label-width="80px">
            <el-form-item label="Â∫èÂè∑">
                <el-input v-model="personData.uid" :disabled="true"></el-input>
            </el-form-item>
            <el-form-item label="ÂßìÂêç">
                <el-input v-model="personData.username" @blur="checkUserName"></el-input>
                <el-tag :type="messageNameType" v-show="show">{{messageName}}</el-tag>
            </el-form-item>
            <el-form-item label="‰∏™‰∫∫ÁÆÄ‰ªã">
                <el-input v-model="personData.des"></el-input>
            </el-form-item>
            <el-form-item label="ÊÄßÂà´">
                <el-input v-model="personData.sex"></el-input>
            </el-form-item>
            <el-form-item label="Â§¥ÂÉè">
                <el-upload class="upload-demo" action="/user.do?type=updateImg" :on-preview="handlePreview"
                           :on-remove="handleRemove" :limit="1" :on-success="handleSuccess" list-type="picture">
                    <el-button size="small" type="primary">ÁÇπÂáª‰∏ä‰º†</el-button>
                    <div slot="tip" class="el-upload__tip">Âè™ËÉΩ‰∏ä‰º†jpg/pngÊñá‰ª∂Ôºå‰∏î‰∏çË∂ÖËøá500kb</div>
                </el-upload>
            </el-form-item>

            <el-form-item label="ÁîüÊó•">
                <el-input v-model="personData.birthday"></el-input>
            </el-form-item>
            <el-form-item label="ÁîµËØù">
                <el-input v-model="personData.phone" @blur="checkUserPhone"></el-input>
                <el-tag :type="messagePhoneType" v-show="showPhone">{{messagePhone}}</el-tag>
            </el-form-item>
            <el-form-item label="Ê≥®ÂÜåÊó∂Èó¥">
                <el-input v-model="personData.regtime" :disabled="true"></el-input>
            </el-form-item>
            <el-form-item label="ÊúÄÂêéÁôªÈôÜÊó∂Èó¥">
                <el-input v-model="personData.logintime" :disabled="true"></el-input>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button @click="showDataDialog = false">Âèñ Ê∂à</el-button>
            <el-button @click="updateUser">Á°ÆËÆ§‰øÆÊîπ</el-button>
        </div>
    </el-dialog>

</div>


<!-- ÂÖ¨Âëä -->
<div id="notice" style="display: none;" class="notice-box">
    Ê¨¢Ëøé‰ΩøÁî® Ëä±ÁîüÂú∞ÈìÅÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªü<br/>
    Ê¨¢Ëøé‰ΩøÁî® Ëä±ÁîüÂú∞ÈìÅÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªü<br/>
    Ê¨¢Ëøé‰ΩøÁî® Ëä±ÁîüÂú∞ÈìÅÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªü<br/>
    Ê¨¢Ëøé‰ΩøÁî® Ëä±ÁîüÂú∞ÈìÅÂêéÂè∞ÁÆ°ÁêÜÁ≥ªÁªü<br/>
</div>

</body>

<script>
    //Âä†ËΩΩÈ°µÈù¢
    var loading = layer.load();
    $(document).ready(function () {
        layer.close(loading);
        $('#app').css('display', 'block')
    })

    // ËÆæÁΩÆ Ê†áÁ≠æ
    function setTabs(e) {
        vm.tabs = e
        vm.$set(vm.tabs, 1, e)
    }


    // index vue ÂÆû‰æã
    var userListObject2 = {
        data() {
            var validatePass = (rule, value, callback) => {
                if (value === '') {
                    callback(new Error('ËØ∑ËæìÂÖ•ÂØÜÁ†Å'));
                } else {
                    if (this.updatePwd.confirmPwd !== '') {
                        this.$refs.updatePwd.validateField('confirmPwd');
                    }
                    callback();
                }
            };
            var validatePass2 = (rule, value, callback) => {
                if (value === '') {
                    callback(new Error('ËØ∑ÂÜçÊ¨°ËæìÂÖ•ÂØÜÁ†Å'));
                } else if (value !== this.updatePwd.newPwd) {
                    callback(new Error('‰∏§Ê¨°ËæìÂÖ•ÂØÜÁ†Å‰∏ç‰∏ÄËá¥!'));
                } else {
                    callback();
                }
            };
            return {
                /*
                 *ÂèØ‰øÆÊîπÁöÑÈÖçÁΩÆ‰ø°ÊÅØ
                 */
                rules: {
                    newPwd: [
                        {required: true, message: 'ËØ∑ËæìÂÖ•ÂØÜÁ†Å', trigger: 'blur'},
                        {min: 6, max: 16, message: 'ÈïøÂ∫¶Âú® 6 Âà∞ 16 ‰∏™Â≠óÁ¨¶', trigger: 'blur'},
                        {validator: validatePass, trigger: 'blur'}
                    ],
                    confirmPwd: [
                        {required: true, message: 'ËØ∑Á°ÆËÆ§ÂØÜÁ†Å', trigger: 'blur'},
                        {min: 6, max: 16, message: 'ÈïøÂ∫¶Âú® 6 Âà∞ 16 ‰∏™Â≠óÁ¨¶', trigger: 'blur'},
                        {validator: validatePass2, trigger: 'blur', required: true}
                    ],
                },
                adminName: "",
                messagePhone: "",
                navs: [],
                headpic: "",
                resultHeadPic: "",
                updatePwd: {
                    pwd: "",
                    newPwd: "",
                    confirmPwd: ""
                },
                // Â∑¶‰æßÂØºËà™Ê†è
                webInfo: {
                    bg: "#545c64",
                    // bg:'#4f74b4',
                    textColor: "#fff",
                    // textColorActive: "#ffd04b"
                    textColorActive: "#ffd04b"
                },
                activeIndex: 0,
                footerText: 'mq-admin',
                messagePhoneType:"",
                /*
                 *‰∏çÂª∫ËÆÆ‰øÆÊîπÁöÑÈÖçÁΩÆ‰ø°ÊÅØ
                 */
                isCollapse: true,
                welcome: true,
                showNav: true,
                updateDialog: false,//ÊéßÂà∂Ê∑ªÂä†ÁºñËæëÈ°µÈù¢ÊòæÁ§∫‰∏éÈöêËóè
                showDataDialog: false,
                personData: {},
                tabs: [],
                id: '0',
                i: 0,
                isActive: 'tab-item-active',
                loadOk: false,
                item: '',
                disabled: false,
                show: false,
                showPhone: false,
                messageName: "",
                messageNameType: "",

            };
        },
        watch: {
            getTabsBoxWidth: function () {
                // Âà§Êñ≠ËæπÁïå
                var tbox = $('.tab-item-box')
            }
        },
        methods: {
            checkUserPhone(){
                let vm = this;
                let phone = vm.$data.personData.phone;
                console.log("ASDASDASDASDASD"+phone)
                if (!(/^1([358][0-9]|4[579]|66|7[0135678]|9[89])[0-9]{8}$/.test(phone))) {
                    vm.$data.messagePhone = "ÊâãÊú∫Âè∑Á†ÅÊúâËØØÔºåËØ∑ÈáçÂ°´";
                    vm.$data.messagePhoneType = "danger"
                } else {
                    vm.$data.messagePhone = "ÊâãÊú∫Âè∑Á†ÅÊ†ºÂºèÊ≠£Á°Æ";
                    vm.$data.messagePhoneType = "success"
                }
                vm.$data.showPhone = true;
            },
            checkUserName() {
                let vm = this;
                let userName = this.personData.username;
                axios({
                    method: "post",
                    url: "/user.do",
                    params: {
                        type: "checkUserName",
                        username: userName,
                    }
                }).then(function (response) {
                    vm.$data.show = true;
                    if (vm.$data.adminName === vm.$data.personData.username) {
                        vm.$data.messageNameType = "success"
                        vm.$data.messageName = "Áî®Êà∑ÂêçÊú™‰øÆÊîπ";
                    } else {
                        vm.$data.messageName = response.data;
                        if (response.data === "ÂêàÊ≥ïÁî®Êà∑Âêç") {
                            vm.$data.messageNameType = "success"
                        } else {
                            vm.$data.messageNameType = "danger"
                        }
                    }
                })
            },
            handlePreview(file) {
            },
            handleRemove(file, fileList) {
            },
            handleSuccess(res) {
                this.resultHeadPic = res;
            },
            isShowNav: function (e) { //ÈöêËóèÊòæÁ§∫Â∑¶ËæπÂØºËà™Ê†è
                if (this.showNav) {
                    $(".left-side").animate({left: '-220px'}, "slow");
                    $(".right-box").animate({left: '0'}, "slow");
                    this.showNav = !this.showNav
                } else {
                    $(".left-side").animate({left: '0px'}, "slow");
                    $(".right-box").animate({left: '220px'}, "slow");
                    this.showNav = !this.showNav
                }
            },
            welTab: function () { //ÊéßÂà∂Âè∞ Ê¨¢ËøéÈ°µÈù¢ tab‰∫ã‰ª∂
                this.welcome = true
                this.id = '0'
                this.activeIndex = '0'
                $('.tab-item-ul').css("left", 0)
            },
            openTabs: function (e) { //ÊâìÂºÄÈ°µÈù¢ Âä†ËΩΩÊòæÁ§∫tabs
                this.welcome = false
                var tabs = this.tabs
                if (this.tabs.length == 0) {
                    this.tabs.push({id: e.id, data: e})
                    this.id = e.id
                    this.item = e
                    calWidth()
                } else {
                    var back = checkTab(e.id)
                    if (back == 1) { //ÂèØ‰ª•ÊèíÂÖ•
                        this.tabs.push({id: e.id, data: e})
                        this.id = e.id
                        this.item = e
                        calWidth()
                    } else { //Â∑≤ÊâìÂºÄ
                        this.id = e.id;
                        this.item = e
                        calTabWid(e.id)
                    }
                }
            },
            //ÁÇπÂáªtabÊòæÁ§∫È°µÈù¢ Âπ∂ÊîπÂèòÈ¢úËâ≤ Ë∞ÉÊï¥Ë∑ùÁ¶ª
            tabActive: function (e) {
                this.welcome = false
                this.id = e.id;
                this.item = e.data
                this.activeIndex = e.id
                calTabWid(e.id)
            },
            //tabsÂÖ≥Èó≠‰∫ã‰ª∂
            tabClose: function (e) {
                closeTabThis(e.id)
            },
            //tabsÂè≥Áßª
            tabsRight: function () {
                var left = $('.tab-item-ul').position().left;
                var tbox = $('.tab-item-box').width() //Â§ñËæπÁõíÂ≠êË∑ùÁ¶ªÈïøÂ∫¶
                var ul = $('.tab-item-ul').width()
                if (ul > tbox) {
                    if (left < tbox - ul) {
                        layer.tips('Âà∞ÊúÄÂè≥Ëæπ‰∫Ü', '.tab-right', {tips: 1});
                    } else {
                        $('.tab-item-ul').css("left", -(ul - tbox))
                    }
                } else {
                    layer.tips('Âà∞ÊúÄÂè≥Ëæπ‰∫Ü', '.tab-right', {tips: 1});
                }
            },
            //tabsÂ∑¶Áßª
            tabsLeft: function () {
                var left = $('.tab-item-ul').position().left;
                if (left >= 0) {
                    layer.tips('Âà∞ÊúÄÂ∑¶Ëæπ‰∫Ü', '.tab-left', {tips: 1});
                } else if (left < -100) {
                    $('.tab-item-ul').css("left", left + 100)
                } else {
                    $('.tab-item-ul').css("left", 0)
                }
            },
            notice: function () { //ÂÖ¨Âëä
                // layer.msg('ÂÖ¨Âëä')
                layer.open({
                    type: 1,
                    title: 'Á≥ªÁªüÂÖ¨Âëä',
                    content: $('#notice'),
                    area: ['300px', 'auto'],
                    btn: 'Áü•ÈÅìÂï¶',
                    btnAlign: 'c' //ÊåâÈíÆÂ±Ö‰∏≠
                });
            },
            // ÂÖ≥Èó≠tab
            tabsCloseItem: function (e) {
                if (e == 'a') {
                    // layer.msg('ÂÖ≥Èó≠ÂΩìÂâç')
                    closeTabThis(this.id)
                } else if (e == 'b') {
                    // layer.msg('ÂÖ≥Èó≠ÂÖ∂‰ªñ')
                    closeTabOther()
                } else {
                    // layer.msg('ÂÖ≥Èó≠ÊâÄÊúâ')
                    closeTabAll()
                }
            },
            modifyPwd() {
                let vm = this;
                axios({
                    method: "post",
                    url: "user.do",
                    params: {
                        type: "updatePwd",
                        pwd: this.updatePwd.pwd,
                        newPwd: this.updatePwd.newPwd,
                        confirmPwd: this.updatePwd.confirmPwd,
                        uid: sessionStorage.getItem("uid")
                    }

                }).then(function (response) {
                    alert(response.data);
                    vm.$data.updateDialog = false;
                    if (response.data === "‰øÆÊîπÊàêÂäü") {
                        //Ê∏ÖÁ©∫session ÈÄÄÂá∫ÁôªÈôÜ
                        sessionStorage.setItem("uid", "");
                        window.location.href = "login.jsp";
                    }
                    vm.$data.updatePwd.pwd = "";
                    vm.$data.updatePwd.newPwd = "";
                    vm.$data.updatePwd.confirmPwd = "";
                });
            },
            searchPersonData() {
                let vm = this;
                axios({
                    method: "post",
                    url: "user.do",
                    params: {
                        type: "searchPersonData",
                        uid: sessionStorage.getItem("uid")
                    }
                }).then(function (response) {
                    console.log(response.data)
                    vm.$data.personData = response.data;
                });
            }, updateUser() {
                let vm = this;
                //‰∏ä‰º†ÂõæÁâá
                axios({
                    method: "post",
                    url: "user.do",
                    params: {
                        type: "updateUser",
                        uid: this.personData.uid,
                        username: this.personData.username,
                        des: this.personData.des,
                        sex: this.personData.sex,
                        birthday: this.personData.birthday,
                        phone: this.personData.phone,
                        headpic: "upload/" + this.resultHeadPic
                    }
                }).then(function (response) {
                    alert(response.data)
                    vm.$data.showDataDialog = false;
                    vm.init();
                });
            },
            // ‰∏™‰∫∫‰ø°ÊÅØÊìç‰Ωú
            personCommand(e) {
                let vm = this;
                switch (e) {
                    case 'center':
                        vm.$data.showDataDialog = true;
                        vm.searchPersonData();
                        break;
                    case 'base':
                        vm.$data.updateDialog = true;
                        break;
                    case 'logout':
                        this.$confirm('Á°ÆÂÆöÈÄÄÂá∫ÁôªÂΩïÂêó?', 'ÊèêÁ§∫', {
                            confirmButtonText: 'Á°ÆÂÆö',
                            cancelButtonText: 'ÂèñÊ∂à',
                            type: 'warning'
                        }).then(() => {
                            //ÈÄÄÂá∫ÁôªÈôÜ ,Ê∏ÖÁ©∫sessionÁöÑuid
                            sessionStorage.setItem("uid", "");
                            window.location.href = "login.jsp"
                        }).catch(() => {
                            this.$message({type: 'info', message: 'Â∑≤ÂèñÊ∂àÈÄÄÂá∫'});
                        });
                        break;
                }
            }, init() {
                let vm = this;
                let uid = sessionStorage.getItem("uid");
                axios({
                    method: "post",
                    url: "login.do",
                    params: {
                        type: "show",
                        uid: uid,
                    }
                }).then(function (response) {
                    vm.$data.adminName = response.data[0].username;
                    vm.$data.headpic = response.data[0].headpic;
                    vm.$data.navs = response.data;

                });
            },

        },
        mounted() {
            let vm = this;
            vm.init()
        },

    }

    var vueObject2 = Vue.extend(userListObject2);
    var vm = new vueObject2().$mount("#app");


    //Ê£ÄÊü•tabsÊòØÂê¶Â∑≤ÁªèÊâìÂºÄ
    function checkTab(id) {
        var i = 0;
        var back = 0
        var tabs = vm.tabs
        for (i; i < tabs.length; i++) {
            if (tabs[i].id == id) {
                back = 0
                break //ÊâæÂà∞id ‰∏≠Êñ≠Âæ™ÁéØ
            } else {
                back = 1
            }
        }
        return back
    }

    //ËÆ°ÁÆó tabË∑ùÁ¶ª
    function calTabWid(id) {
        // console.log(id)
        var tbox = $('.tab-item-box').width() //Â§ñËæπÁõíÂ≠êË∑ùÁ¶ªÈïøÂ∫¶
        var ul = $('.tab-item-ul').width() //tabsÂ§ñËæπÁõíÂ≠êÈïøÂ∫¶
        var left = $('.tab-item-ul').position().left; //ul Â∑¶ËæπÂÅèÁßªË∑ùÁ¶ª
        var titem = $('#' + id)
        if (titem.length > 0) {
            var iLeft = titem.position().left //tabË∑ùÁ¶ªÁà∂ÁõíÂ≠êÂ∑¶ËæπË∑ùÁ¶ª
            var titemW = $('#' + id).width()
            if (ul > tbox && left <= 0) {
                var disAreaL = -left //ÂèØËßÜÂå∫ÂüüÂ∑¶Ëæπ
                var disAreaR = -left + tbox //ÂèØËßÜÂå∫ÂüüÂè≥Ëæπ
                var iRight = titemW + iLeft
                if (iLeft >= disAreaL && iRight <= disAreaR) {
                    // console.log('‰∏çÈúÄË¶ÅÁßªÂä®')
                } else {
                    // console.log('ÈúÄË¶ÅÁßªÂä®')
                    if (iLeft < disAreaL) {
                        // console.log('ÂæÄÂè≥ÁßªÂä®')
                        $('.tab-item-ul').css("left", left + (disAreaL - iLeft) + 50)
                    } else if (iRight > disAreaR) {
                        // console.log('ÂæÄÂ∑¶ÁßªÂä®')
                        $('.tab-item-ul').css("left", left + (disAreaR - iRight) - 20)
                    }
                }
            }
        }
    }

    // opentab ÊâìÂºÄÊó∂ËÆ°ÁÆóÂ∑¶ÁßªË∑ùÁ¶ª
    function calWidth() {
        var tbox = $('.tab-item-box').width() //Â§ñËæπÁõíÂ≠êË∑ùÁ¶ªÈïøÂ∫¶
        var titem = $('.tab-item')
        var len = vm.tabs.length + 2 //ÊúâÂá†‰∏™tabs
        var countLen = titem.width() * len
        var ul = $('.tab-item-ul').width() + 100
        if (tbox - ul < 0) {
            var len = tbox - ul
            $('.tab-item-ul').css("left", len - 20)
        }
    }

    // ÂÖ≥Èó≠ÂΩìÂâçtabÊ†áÁ≠æ  --> ‰∏ãÊãâÁÇπÂáª‰∫ã‰ª∂„ÄÅtab XÊåâÈîÆÂÖ≥Èó≠‰∫ã‰ª∂
    function closeTabThis(id) {

        var tabs = vm.tabs
        var i = 0;
        var len = vm.tabs.length - 2
        if (id == 0) {
            layer.msg('Ëøô‰∏™‰∏çËÉΩÂÖ≥Èó≠ÁöÑÂì¶')
            return
        }
        for (i; i < tabs.length; i++) { //ÊâæÂà∞idÂú®tabsÊï∞ÁªÑ‰∏≠ÁöÑ‰ΩçÁΩÆ ‰∏ãÊ†á
            // console.log(tabs[i].id)
            if (tabs[i].id == id) {
                break;
            }
        }
        // console.log(i)
        vm.tabs.splice(i, 1) //‰ªétabs‰∏≠ÁßªÈô§

        if (tabs.length == 0) { //Â¶ÇÊûútabsÊ≤°ÊúâÊï∞ÊçÆÔºåÂ∞ÜÊéßÂà∂Âè∞ËÆæÁΩÆÂèòËâ≤
            vm.welcome = true
            vm.id = '0'
        } else {
            if (tabs[len].id != vm.id) { //Âà§Êñ≠tabsÊï∞ÁªÑ‰∏≠ÊúÄÂêé‰∏ÄÁªÑÊï∞ÊçÆÁöÑidÊòØÂê¶‰∏∫ÂΩìÂâçÁöÑidÔºåËã•‰∏çÊòØÂàôËÆæÁΩÆ
                vm.id = tabs[len].id
                vm.item = tabs[len].data
            }
        }
        //Ë∞ÉÊï¥‰ΩçÁΩÆ
        closeWidth()
    }

    //ÂÖ≥Èó≠ÂÖ∂‰ªñÊ†áÁ≠æÈ°µ
    function closeTabOther() { //Âà†Èô§tabsÊâÄÊúâÊï∞ÁªÑÔºåÈáçÊñ∞push
        if (vm.tabs.length == 0) {
            return
        } else {
            if (vm.id == 0) {
                vm.tabs = []
            } else {
                var item = vm.item
                vm.tabs = []
                vm.tabs.push({id: item.id, data: item})
                $('.tab-item-ul').css("left", 0)
            }
        }
    }

    //ÂÖ≥Èó≠ÊâÄÊúâÊ†áÁ≠æÈ°µ
    function closeTabAll() {
        vm.tabs = []
        vm.welcome = true
        vm.id = '0'
        $('.tab-item-ul').css("left", 0)
    }

    // ÂÖ≥Èó≠tabsÊó∂ÈáçÊñ∞Ë∞ÉÊï¥‰ΩçÁΩÆ
    function closeWidth() {
        var tbox = $('.tab-item-box').width() //Â§ñËæπÁõíÂ≠êË∑ùÁ¶ªÈïøÂ∫¶
        var ul = $('.tab-item-ul').width() //tabsÂ§ñËæπÁõíÂ≠êÈïøÂ∫¶
        var left = $('.tab-item-ul').position().left; //ul Â∑¶ËæπÂÅèÁßªË∑ùÁ¶ª
        if (ul > tbox) {
            $('.tab-item-ul').css("left", tbox - ul + 60)
        } else {
            $('.tab-item-ul').css("left", 0)
        }
    }

</script>
</html>
